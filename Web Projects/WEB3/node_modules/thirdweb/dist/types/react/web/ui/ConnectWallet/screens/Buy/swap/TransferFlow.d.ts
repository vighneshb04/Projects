import type { Chain } from "../../../../../../../chains/types.js";
import type { ThirdwebClient } from "../../../../../../../client/client.js";
import type { BuyWithCryptoStatus } from "../../../../../../../pay/buyWithCrypto/getStatus.js";
import type { PayUIOptions } from "../../../../../../core/hooks/connection/ConnectButtonProps.js";
import type { ERC20OrNativeToken } from "../../nativeToken.js";
import type { PayerInfo } from "../types.js";
type TransferFlowProps = {
    title: string;
    onBack?: () => void;
    payer: PayerInfo;
    receiverAddress: string;
    client: ThirdwebClient;
    onDone: () => void;
    onTryAgain: () => void;
    isEmbed: boolean;
    onSuccess: ((status: BuyWithCryptoStatus) => void) | undefined;
    chain: Chain;
    token: ERC20OrNativeToken;
    tokenAmount: string;
    transactionMode?: boolean;
    payOptions?: PayUIOptions;
};
export declare function TransferFlow(props: TransferFlowProps): import("react/jsx-runtime.js").JSX.Element;
export {};
//# sourceMappingURL=TransferFlow.d.ts.map