"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.authEndpoint = authEndpoint;
const fetchers_js_1 = require("../../native/helpers/api/fetchers.js");
const constants_js_1 = require("../../native/helpers/constants.js");
const errors_js_1 = require("../../native/helpers/errors.js");
async function authEndpoint(args) {
    const resp = await fetch(constants_js_1.ROUTE_AUTH_ENDPOINT_CALLBACK, {
        method: "POST",
        headers: {
            ...(0, fetchers_js_1.getSessionHeaders)(),
        },
        body: JSON.stringify({
            payload: args.payload,
            developerClientId: args.client.clientId,
        }),
    });
    if (!resp.ok) {
        const error = await resp.json();
        throw new Error(`Custom auth endpoint authentication error: ${error.message}`);
    }
    try {
        const { verifiedToken } = await resp.json();
        return { storedToken: verifiedToken };
    }
    catch (e) {
        throw new Error((0, errors_js_1.createErrorMessage)("Malformed response from post auth_endpoint authentication", e));
    }
}
//# sourceMappingURL=authEndpoint.js.map